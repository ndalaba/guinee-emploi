<?php/** * The Front Controller. * * A basic controller example.  Has examples of how to set the * response body and status. * * @package  app * @extends  Controller */class Controller_Front extends Controller {    var $articlesL, $articlesR;    var $perpage = 10;    public function before() {        $this->offresL = Model_Offre::getOffresL();        $this->offresR = Model_Offre::getOffresR(4);    }    public function action_index() {               // print_r($this->offresL);        $best = Model_Article::getLast(4);        $data['secteurs'] = Model_Secteur::find('all');        $data['class'] = 'page_accueil';        $video = Model_Video::find('last');        $data['contenu'] = View::forge('index');        $view = View::forge('template', $data);        $view->set_global('best', $best);        $view->set_global('video', $video);        $view->set_global('offres_right', $this->offresR);        $view->set_global('offres_left', $this->offresL);        return $view;    }    public function action_articles() {        $data['articles']= Model_Article::getLast($this->perpage);        $data['count'] = count($data['articles']);                 $data['categories'] = Model_Category::find('all');        $tpl = View::forge('template');        $tpl->contenu = View::forge('articles', $data);        $tpl->set_global('articles', Model_Article::getLast($this->perpage));        $tpl->set_global('count', count($data['articles']));        $tpl->set_global('categories', Model_Category::find('all'));        $tpl->set_global('offres_right', $this->offresR);        $tpl->set_global('offres_left', $this->offresL);        return $tpl;    }    public function action_article($id) {               $article = Model_Article::find()->where(array('id'=>$id,'publie'=>1))->get_one();                               $tpl=View::forge('template');        $tpl->contenu = View::forge('article');        $tpl->set_global('article', $article);        $tpl->set_global('offres_right', $this->offresR);        $tpl->set_global('offres_left', $this->offresL);        $tpl->set_global('article', $article);        return $tpl;           }     public function action_nextarticle($id) {               $articles = Model_Article::getNextArticles($id, $this->perpage);       foreach ($articles as $article){         echo'<div class="tout" id="'.$article->id .'">                <div class="textcont">                    <h5 class="title"><a href="'.Uri::base(false) . 'article/' . $article->id . '/' . Inflector::friendly_title($article->titre).'">'. $article->titre .'</a></h5>                    <p class="soustitle"><a href="#" class="first">'. date('d/M/Y') .'</a><a href="#" class="last">'.stripslashes($article->getCategory()->categorie).'</a></p>                    <p class="text">                        <img alt="'. $article->titre .'" src="'. Uri::base(false) . 'assets/upload/article/' . $article->image .'" style="max-width: 50px;float: left;margin-right: 7px;" />                        <a href="'. Uri::base(false) . 'article/' . $article->id .'">'. Str::truncate($article->contenu, 200) .'</a>                    </p>                                                                                                       </div>            </div>';        }                    }    public function action_contact() {        $tpl = View::forge('template');        $tpl->contenu = View::forge('contact');        $tpl->set_global('offres_right', $this->offresR);        $tpl->set_global('offres_left', $this->offresL);        $tpl->set_global('class', 'page_contact');        if (Input::method() === 'POST') {            $val = Validation::forge();            $val->add_field('nom', 'Nom et prénom', 'required|trim');            $val->add_field('type', 'Type', 'required|trim');            $val->add_field('mail', 'Adresse mail', 'required|valid_email');            $val->add_field('sujet', 'Sujet', 'required|trim');            $val->add_field('message', 'Message', 'required|trim');            if ($val->run()) {                $email = Email::forge();                $email->from($_POST['mail'], $_POST['nom'] . ' ' . Input::post('type'));                $email->to("contact@guinee-emploi.com");                $email->subject($_POST['sujet']);                $email->body($_POST['message']);                $email->send();                $tpl->set_global('message', "Votre message a été envoyé avec succès");                $contact = Model_Contact::forge($_POST);                $contact->ajout = time();                $contact->lu = 0;                $contact->save();            } else {                $tpl->set_global('errors', $val->errors());            }        }        return $tpl;    }    public function action_conditions() {        $tpl=  Fuel\Core\View::forge('template');        $tpl->contenu = View::forge('condition');        $tpl->set_global('offres_right', $this->offresR);        $tpl->set_global('offres_left', $this->offresL);        return $tpl;    }    public function action_loginCandidat() {        $session = Session::instance();        if (isset($_SERVER['HTTP_REFERER'])) {            $session->set('url', $_SERVER['HTTP_REFERER']);        }        $data['contenu'] = View::forge('login_candidat');        $view = View::forge('template',$data);        $view->set_global('offres_right', $this->offresR);        $view->set_global('offres_left', $this->offresL);        return $view;    }    public function action_loginRecruteur() {        $session = Session::instance();        if (isset($_SERVER['HTTP_REFERER'])) {            $session->set('url', $_SERVER['HTTP_REFERER']);        }        $template=  Fuel\Core\View::forge('template');        $template->contenu = View::forge('login_recruteur');        $template->set_global('offres_right', $this->offresR);        $template->set_global('offres_left', $this->offresL);        return $template;    }    public function action_connection() {        if (Input::method() === 'POST') {            $val = Validation::forge();            $val->add_field('email', 'Votre email', 'required|valid_email');            $val->add_field('pwd', 'Mot de passe', 'required');            if ($val->run()) {                if ($_POST['loginUser'] === '1') {                    $candidat = Model_Candidat::connect(Input::post('email'), Input::post('pwd'));                    if ($candidat != null) {                        $session = Session::instance();                        $session->set('id', $candidat->id);                        $session->set('nom', $candidat->nom);                        $session->set('email', $candidat->email);                        $session->set('prenom', $candidat->prenom);                        $session->set('photo', $candidat->photo);                        $session->set('logged_candidat', true);                        if ($session->get('url')) {                            Response::redirect($session->get('url'));                            // header('Location: '.$session->get('url'));                                                } else {                            Response::redirect('candidat');                        }                    } else {                        $data['error'] = "Login ou mot de passe incorrect";                        $data['contenu'] = View::forge('login_candidat');                        $view = View::forge('template', $data);                        $view->set_global('offres_right', $this->offresR);                        $view->set_global('offres_left', $this->offresL);                        return $view;                    }                } else {                    $recruteur = Model_Recruteur::connect(Input::post('email'), Input::post('pwd'));                    if ($recruteur != null AND $recruteur->actif==1) {                        $session = Session::instance();                        $session->set('id', $recruteur->id);                        $session->set('logged_recruteur', true);                        $session->set('logo', $recruteur->logo);                        $session->set('nom', $recruteur->nom);                        $session->set('emailR', $recruteur->email);                        $session->set('secteur', $recruteur->secteur_id);                        $session->set('actif',$recruteur->actif);                        if ($session->get('url')) {                            Response::redirect($session->get('url'));                            // header('Location: '.$session->get('url'));                                                } else                            Response::redirect('recruteur');                    }elseif($recruteur != null AND $recruteur->actif!=1) {                        $data['error'] = "Votre compte recruteur est en cours de validation Vous ne pouvez pas y acceder pour le moment";                        $template=  Fuel\Core\View::forge('template');                        $template->contenu = View::forge('login_recruteur', $data);                        $template->set_global('offres_right', $this->offresR);                        $template->set_global('offres_left', $this->offresL);                        return $template;                    }                    else {                        $data['error'] = "Login ou mot de passe incorrect";                        $template=  Fuel\Core\View::forge('template');                        $template->contenu = View::forge('login_recruteur', $data);                        $template->set_global('offres_right', $this->offresR);                        $template->set_global('offres_left', $this->offresL);                        return $template;                    }                }            } else {                $data['errors'] = $val->errors();                $template=  Fuel\Core\View::forge('template');                $vue = $_POST['loginUser'] == '1' ? 'login_candidat' : 'login_recruteur';                $template->contenu = View::forge($vue, $data);                $template->set_global('offres_right', $this->offresR);                $template->set_global('offres_left', $this->offresL);                return $template;            }        } else            Response::redirect('front');    }    public function action_deconnection() {        Session::destroy();        Response::redirect('front');    }    public function action_cvtheque() {        if ((Session::get('logged_recruteur') and Session::get('actif')==1) OR Session::get('isAdmin')) {            $cvs = Model_Candidat::getCVTheques($this->perpage);            $tpl=  Fuel\Core\View::forge('template');            $tpl->contenu = View::forge('candidat/cvtheque');            $tpl->set_global('cvs', $cvs, false);            $tpl->set_global('offres_right', $this->offresR);            $tpl->set_global('class', 'page_cvtek');            $tpl->set_global('offres_left', $this->offresL);            $tpl->set_global('count', count($cvs));            return $tpl;        } else            Response::redirect('front');    }    public function action_saveNewsletter() {        $mail = explode(";", Input::post('mail'));                $succes = "";        $mailerror = "";        $registererror = "";        foreach ($mail as $value) {            $value = trim($value);            if (preg_match("#^[a-z0-9._-]+@[a-z0-9_-]{2,}\.[a-z]{2,4}$#", $value)) {                if (!Model_Newsletter::isRegistred($value)) {                    Model_Newsletter::saveNewsletter($value);                    $succes = 'Vous recevrez désormais toutes les newslettres de Guinee-Emploi!';                } else {                    $registererror.= $value . ' ';                }            } else {                $mailerror.= $value . ' ';            }        }        if (!empty($mailerror)) {            echo 'Adresse invalide: ' . $mailerror;        }        if (!empty($registererror)) {            echo 'vous êtes déja enregistrés: ' . $registererror;        }        if (empty($mailerror) and empty($mailerror)) {            echo $succes;        }    }    public function action_unsaveNewsletter() {        $mail = explode(";", Input::post('mail'));        $mailerror = "";        foreach ($mail as $value) {            $value = trim($value);            if (Model_Newsletter::isRegistred($value)) {                Model_Newsletter::unsaveNewsletter($value);            } else {                $mailerror.= '<span style="color:red;">' . $value . '</span><br/>';            }        }        if (!empty($mailerror)) {            echo 'Adresses non trouvées:<br/>' . $mailerror;        } else {            echo 'Succès';        }    }}